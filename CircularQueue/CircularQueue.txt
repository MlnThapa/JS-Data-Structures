Circular Queue:
-The size of the queue is fixed and a single block of memory is used as if the first
 element is connected to the last element.
-Also referred as circular buffer or ring buffer and follows the FIFO principle.
-A circular Queue will reuse the empty block created during the dequeue operation.
-When working with queues of fixed maximum size, a circular queue is a great implementation choice.

It supports two main operations:
-Enqueue, which adds an element to the rear/tail of the collection.
-Dequeue, which removes an element from the front/head of collection.

Circular queue usage:
-Clock
-Streaming data
-Traffic lights

Implementation:
-Enqueue(element)
-Dequeue()
-isFull()-check if the queue is full
-isEmpty()-check if the queue is empty
-peek()-get the value of the front of the queue without removing it
-size()-get the number of elements in the queue
-print()-Visualize the elements in the queue.